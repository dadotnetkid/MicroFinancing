@using System.Security.Claims
<!-- Main Sidebar Container -->
<aside class="main-sidebar sidebar-dark-primary elevation-4">
    <!-- Brand Logo -->
    <a href="/" class="brand-link">
        <img src="/adminlte/img/AdminLTELogo.png" alt="AdminLTE Logo" class="brand-image img-circle elevation-3" style="opacity: .8">
        <span class="brand-text font-weight-light">CCC Lending</span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Sidebar user (optional) -->
        <div class="user-panel mt-3 pb-3 mb-3 d-flex">
            <div class="image">
                <img src="/adminlte/img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image">
            </div>
            <div class="info">
                <a href="#" class="d-block">@user?.GetUserFullName()</a>
            </div>
        </div>

        <!-- Sidebar Menu -->
        <nav class="mt-2">
            <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                <!-- Add icons to the links using the .nav-icon class
                with font-awesome or any other icon font library -->
                @if (user?.IsInRole("Administrator") == true)
                {
                    <li class="nav-item">
                        <a href="/" class="nav-link">
                            <i class="nav-icon fas fa-th"></i>
                            <p>
                                Dashboard
                            </p>
                        </a>
                    </li>
                }
                <li class="nav-item has-treeview">
                    <a class="nav-link">
                        <i class="nav-icon fas fa-users"></i>
                        <p>
                            Customer
                            <i class="fas fa-angle-left right"></i>
                        </p>
                    </a>
                    <ul class="nav nav-treeview">
                        <li class="nav-item">
                            <a href="/Customers" class="nav-link">
                                <i class="far fa-circle nav-icon"></i>
                                <p>List</p>
                            </a>
                        </li>
                        @if (user?.IsInRole("Administrator") == true)
                        {
                            <li class="nav-item">
                                <a href="/Summary" class="nav-link">
                                    <i class="far fa-circle nav-icon"></i>
                                    <p>Summary</p>
                                </a>
                            </li>
                        }
                    </ul>
                </li>


                @if (UserService.IsAuthorize(ClaimsConstant.Customer.ManagePayment))
                {
                    <li class="nav-item">
                        <a href="/payments" class="nav-link">
                            <i class="nav-icon fas fa-cash-register"></i>
                            <p>
                                Payments
                            </p>
                        </a>
                    </li>
                }

                @if (user?.IsInRole("Administrator") == true)
                {
                    <li class="nav-item">
                        <a href="/Payment-Approval" class="nav-link">
                            <i class="far fa-circle nav-icon"></i>
                            <p>Payment Approval</p>
                        </a>
                    </li>
                }

                @if (user?.IsAuthorized(ClaimsConstant.Reports.ViewCollectionSummaryReport, 
                                        ClaimsConstant.Reports.ViewCollectorClientReport) == true)
                {
                    <li class="nav-item has-treeview">
                        <a class="nav-link">
                            <i class="nav-icon fas fa-file-alt"></i>
                            <p>
                                Reports
                                <i class="fas fa-angle-left right"></i>
                            </p>
                        </a>
                        
                       
                        <ul class="nav nav-treeview">
                            @if (user?.IsAuthorized(ClaimsConstant.Reports.ViewCollectionSummaryReport) == true)
                            {
                                <li class="nav-item">
                                    <a href="/collection-summary-report" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Collection Summary</p>
                                    </a>
                                </li>
                            }

                            @if (user?.IsAuthorized(ClaimsConstant.Reports.ViewCollectionSummaryReport) == true)
                            {
                                <li class="nav-item">
                                    <a href="/clients-by-collector-summary" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Collector's Clients</p>
                                    </a>
                                </li>
                            }

                            @if (user.IsInRole("Administrator"))
                            {
                                <li class="nav-item">
                                    <a href="/top-sales-chart-report" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Top Sales Chart Report</p>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a href="/reports/payment-summary" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Payment Summary</p>
                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
                @if (UserService.IsAuthorize(ClaimsConstant.Users.View) ||
                UserService.IsAuthorize(ClaimsConstant.Roles.View))
                {
                    <li class="nav-item has-treeview">
                        <a class="nav-link">
                            <i class="nav-icon fas fa-copy"></i>
                            <p>
                                Maintenance
                                <i class="fas fa-angle-left right"></i>
                            </p>
                        </a>
                        <ul class="nav nav-treeview">

                            <li class="nav-item">
                                <a href="/Maintenance/Terms" class="nav-link">
                                    <i class="far fa-circle nav-icon"></i>
                                    <p>Terms</p>
                                </a>
                            </li>

                            <li class="nav-item">
                                <a href="/Maintenance/Users" class="nav-link">
                                    <i class="far fa-circle nav-icon"></i>
                                    <p>Users</p>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="/Maintenance/Permission" class="nav-link">
                                    <i class="far fa-circle nav-icon"></i>
                                    <p>Permissions</p>
                                </a>
                            </li>

                        </ul>
                    </li>
                }
            </ul>
        </nav>
        <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
</aside>

@code {

    [Inject] private AuthenticationStateProvider? authenticationState { get; set; }

    [Inject] private IUserService UserService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState?.GetAuthenticationStateAsync()!;
        user = authState.User;
    }

    private ClaimsPrincipal? user;
}