@page "/Maintenance/Permission"
@attribute [Authorize(Policy = ClaimsConstant.Roles.View)]
<div class="card">
    <div class="card-header">
        <div class="float-left">
            <h5>Permission</h5>
        </div>
        <div class="float-right">
            <Syncfusion.Blazor.Buttons.SfButton IconCss="fas fa-user-plus" OnClick="AddPermission" />
        </div>
    </div>
    <div class="card-body">
        <SfGrid AllowPaging="true" TValue="PermissionGridDTM" @ref="PermissionGrid">
            <Syncfusion.Blazor.Data.SfDataManager AdaptorInstance="typeof(PermissionAdaptor)" Adaptor="Adaptors.CustomAdaptor" />
            <GridColumns>
                <GridColumn Field=@nameof(PermissionGridDTM.Name) Width="200"></GridColumn>
                <GridColumn Field=@nameof(PermissionGridDTM.Users) Width="80"></GridColumn>
                <GridColumn Field=@nameof(PermissionGridDTM.Scopes)>
                    <Template>
                        @{
                            var item = context as PermissionGridDTM;
                        }

                        @if (item is { Scopes: { } })
                        {
                            foreach (var i in item.Scopes)
                            {
                                <span class="badge badge-primary mr-1">@i</span>
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Width="100" TextAlign="TextAlign.Right" HeaderText="Manage">

                    <Template>
                        <SfDropDownButton IconCss="fas fa-ellipsis-v">
                            <DropDownMenuItems>
                                <DropDownMenuItem Id="@GenericDropdownItem.Edit.ToString()" Text="Edit" IconCss="fas fa-user-edit"></DropDownMenuItem>
                                <DropDownMenuItem Id="@GenericDropdownItem.Delete.ToString()" Text="Delete" IconCss="fas fa-trash"></DropDownMenuItem>
                                <DropDownMenuItem Id="@GenericDropdownItem.AddUser.ToString()" Text="Add User" IconCss="fas fa-redo"></DropDownMenuItem>
                            </DropDownMenuItems>
                            <DropDownButtonEvents ItemSelected="@((e)=>OnDropdownSelectedMenu(e,(PermissionGridDTM)context))" />
                        </SfDropDownButton>


                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>
<CascadingValue Name="MainPage" Value="this">
    <AddEditPermission @ref="addEditPermission" />
</CascadingValue>
@code {
    private AddEditPermission? addEditPermission;

    public SfGrid<PermissionGridDTM>? PermissionGrid { get; set; }

    private void OnDropdownSelectedMenu(MenuEventArgs menuEventArgs, PermissionGridDTM context)
    {
        switch (menuEventArgs.Item.Id.ToTypeOf < GenericDropdownItem>())
        {
            case GenericDropdownItem.Edit:
                {
                    addEditPermission?.Show(new()
                        {
                            Id = context.Id,
                            Name = context.Name,
                            Scopes = context.Scopes.ToArray(),
                            Users = context.Users
                        });
                    break;
                } 
            case GenericDropdownItem.AddUser:
                {
                    addEditPermission?.Show(new()
                        {
                            Id = context.Id,
                            Name = context.Name,
                            Scopes = context.Scopes.ToArray(),
                            Users = context.Users
                        });
                    break;
                }

        }
    }

    public async Task RefreshGrid()
    {
        await PermissionGrid?.Refresh()!;
    }

    private void AddPermission()
    {
        addEditPermission.Show();
    }
   

}
